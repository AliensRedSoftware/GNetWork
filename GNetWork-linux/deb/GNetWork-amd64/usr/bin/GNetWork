#!/bin/bash

# update name...
sudo sh -c "echo $(uuidgen) > /proc/sys/kernel/hostname"
sudo sh -c "echo $(uuidgen) > /etc/hostname"

# off ipv6
sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1

sudo sh -c "echo '1' > /proc/sys/net/ipv6/conf/all/disable_ipv6"

# cls networks...
# wipe network
sudo sh -c "echo '1024' > /proc/sys/vm/min_free_kbytes"
sudo sh -c "echo '1' > /proc/sys/vm/oom_kill_allocating_task"
sudo sh -c "echo '1' > /proc/sys/vm/overcommit_memory"
sudo sh -c "echo '0' > /proc/sys/vm/oom_dump_tasks"
sudo ip route flush cache
sudo ip -s -s neigh flush all
sudo systemd-resolve --flush-caches

# settings write NetworkManager...
SNetworkManager="[device-mac-randomization]
wifi.scan-rand-mac-address=yes

[connection-mac-randomization]
ethernet.cloned-mac-address=random
wifi.cloned-mac-address=random"

sudo sh -c "echo '$SNetworkManager' > /etc/NetworkManager/conf.d/GNetWork.conf"
SHOSTS="127.0.0.1	localhost"
sudo sh -c "echo '$SHOSTS' > /etc/hosts"
SPROTOCOLS="# Internet (IP) protocols
#
# Updated from http://www.iana.org/assignments/protocol-numbers and other
# sources.
# New protocols will be added on request if they have been officially
# assigned by IANA and are not historical.
# If you need a huge list of used numbers please install the nmap package.

ip	0	IP		# internet protocol, pseudo protocol number
hopopt	0	HOPOPT		# IPv6 Hop-by-Hop Option [RFC1883]
icmp	1	ICMP		# internet control message protocol
igmp	2	IGMP		# Internet Group Management
ggp	3	GGP		# gateway-gateway protocol
ipencap	4	IP-ENCAP	# IP encapsulated in IP (officially ``IP'')
st	5	ST		# ST datagram mode
tcp	6	TCP		# transmission control protocol
egp	8	EGP		# exterior gateway protocol
igp	9	IGP		# any private interior gateway (Cisco)
pup	12	PUP		# PARC universal packet protocol
udp	17	UDP		# user datagram protocol
hmp	20	HMP		# host monitoring protocol
xns-idp	22	XNS-IDP		# Xerox NS IDP
rdp	27	RDP		# reliable datagram protocol
iso-tp4	29	ISO-TP4		# ISO Transport Protocol class 4 [RFC905]
dccp	33	DCCP		# Datagram Congestion Control Prot. [RFC4340]
xtp	36	XTP		# Xpress Transfer Protocol
ddp	37	DDP		# Datagram Delivery Protocol
idpr-cmtp 38	IDPR-CMTP	# IDPR Control Message Transport
# ipv6	41	IPv6		# Internet Protocol, version 6
# ipv6-route 43	IPv6-Route	# Routing Header for IPv6
# ipv6-frag 44	IPv6-Frag	# Fragment Header for IPv6
idrp	45	IDRP		# Inter-Domain Routing Protocol
rsvp	46	RSVP		# Reservation Protocol
gre	47	GRE		# General Routing Encapsulation
esp	50	IPSEC-ESP	# Encap Security Payload [RFC2406]
ah	51	IPSEC-AH	# Authentication Header [RFC2402]
skip	57	SKIP		# SKIP
# ipv6-icmp 58	IPv6-ICMP	# ICMP for IPv6
# ipv6-nonxt 59	IPv6-NoNxt	# No Next Header for IPv6
# ipv6-opts 60	IPv6-Opts	# Destination Options for IPv6
rspf	73	RSPF CPHB	# Radio Shortest Path First (officially CPHB)
vmtp	81	VMTP		# Versatile Message Transport
eigrp	88	EIGRP		# Enhanced Interior Routing Protocol (Cisco)
ospf	89	OSPFIGP		# Open Shortest Path First IGP
ax.25	93	AX.25		# AX.25 frames
ipip	94	IPIP		# IP-within-IP Encapsulation Protocol
etherip	97	ETHERIP		# Ethernet-within-IP Encapsulation [RFC3378]
encap	98	ENCAP		# Yet Another IP encapsulation [RFC1241]
#	99			# any private encryption scheme
pim	103	PIM		# Protocol Independent Multicast
ipcomp	108	IPCOMP		# IP Payload Compression Protocol
vrrp	112	VRRP		# Virtual Router Redundancy Protocol [RFC5798]
l2tp	115	L2TP		# Layer Two Tunneling Protocol [RFC2661]
isis	124	ISIS		# IS-IS over IPv4
sctp	132	SCTP		# Stream Control Transmission Protocol
fc	133	FC		# Fibre Channel
mobility-header 135 Mobility-Header # Mobility Support for IPv6 [RFC3775]
udplite	136	UDPLite		# UDP-Lite [RFC3828]
mpls-in-ip 137	MPLS-in-IP	# MPLS-in-IP [RFC4023]
manet	138			# MANET Protocols [RFC5498]
hip	139	HIP		# Host Identity Protocol
shim6	140	Shim6		# Shim6 Protocol [RFC5533]
wesp	141	WESP		# Wrapped Encapsulating Security Payload
rohc	142	ROHC		# Robust Header Compression"
sudo sh -c "echo '$SPROTOCOLS' > /etc/protocols"
sudo systemctl restart NetworkManager

# reload devices networks eth
sudo nmcli -g name,type connection show --active | awk -F: '/ethernet|wireless/ { print $1 }' | while read connection
do
	# settings eth
	dev=$(sudo nmcli -g GENERAL.DEVICES con show "$connection" | while read dev; do sudo nmcli -g GENERAL.IP-IFACE device show "$dev"; done)
	sudo nmcli connection delete "$connection"

	sudo nmcli connection add type ethernet con-name "$connection" ifname $dev
 
	# settings eth
	sudo nmcli con mod "$connection" ipv6.method disabled

	# con eth
	sudo nmcli con down "$connection" && sudo nmcli con up "$connection"
done

# sound effect cls success
play -t mp3 -v 0.20 ~/.config/GNetWork/notify.mp3

PTIMEOUT=~/.config/GNetWork/resetTimeOut.cfg

if [ -f $PTIMEOUT ]; then
	TIMEOUT=$(cat ~/.config/GNetWork/resetTimeOut.cfg)
	if [ $TIMEOUT -gt 59 ];
	then
		PIDAS=$(pgrep GNetWork)
		sleep $TIMEOUT
		GNetWork &
		sudo kill -KILL $PIDAS
	fi
fi

